version: '2.2'
services:
  rabbitmq:
    image: ${GENE_DOCKER_REGISTRY}/rabbitmq:3.8.12-management
    container_name: capacity-planning-rabbitmq
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - capacity-planning
    ports:
      - 5672:5672  #amqp port
      - 61613:61613 #stomp port
      - 15672:15672 # management web console
  postgres:
    image: ${GENE_DOCKER_REGISTRY}/postgresql/postgresql-12-centos7:20200703-6213611
    container_name: capacity-planning-postgres
    networks:
      - capacity-planning
    ports:
      - 5432:5432
    volumes:
      - ./postgres/cfg:/opt/app-root/src/postgresql-cfg # Set additional configuration
      - ./postgres/start:/opt/app-root/src/postgresql-start # Create schema and users
      - pgdata:/var/lib/pgsql/data # Backup mount the database data (persist between reboots)
    environment:
      - POSTGRESQL_ADMIN_PASSWORD=db_admin
    mem_limit: 512m   # Increase those settings accordingly to postgresql.conf
    shm_size: 128m    # to work with large scenarios

  keycloak:
    image: ${GENE_DOCKER_REGISTRY}/db-gene/keycloak:4.0.1-fp2
    networks:
      - capacity-planning
    container_name: capacity-planning-keycloak
    ports:
      - "9090:8080"
    expose:
      - 8080 # Keycloak web console
      - 9990 # Wildfly management console
    environment:
      - CLIENT_ID=gene-web
      - INCLUDE_GROUPS=GENE_USERS
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_FRONTEND_URL=http://localhost:9090/auth # Enable backend services access to keycloak, this set forceBackendUrlToFrontendUrl to false
    volumes:
      - ./keycloak/realm.json:/tmp/realm.json
    command: [
        "-b", "0.0.0.0",
        "-Dkeycloak.migration.action=import",
        "-Dkeycloak.migration.provider=singleFile",
        "-Dkeycloak.migration.file=/tmp/realm.json",
        "-Dkeycloak.migration.strategy=IGNORE_EXISTING"
    ]
    links:
      - postgres
      - rabbitmq
    depends_on:
      - postgres
      - rabbitmq

  mongo:
    image: ${GENE_DOCKER_REGISTRY}/mongo/mongo:4.2.1
    container_name: capacity-planning-mongo
    networks:
      - capacity-planning
    ports:
      - 27017:27017
    volumes:
      - ./mongo/addUser.sh:/docker-entrypoint-initdb.d/addUser.sh
      - mongovolume:/data/db
      - mongovolume:/logs
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGODB_DBOS_USER=optimserver
      - MONGODB_DBOS_PASSWORD=optimserver
      - MONGODB_DBOS_DATABASE=optimserver-master-db
      - MONGODB_SCENARIO_USER=scenario
      - MONGODB_SCENARIO_PASSWORD=scenario
      - MONGODB_SCENARIO_DATABASE=scenario-db
      - MONGODB_EXECUTION_USER=execution
      - MONGODB_EXECUTION_PASSWORD=execution
      - MONGODB_EXECUTION_DATABASE=execution-db
      - MONGODB_PERMISSION_USER=permission
      - MONGODB_PERMISSION_PASSWORD=permission
      - MONGODB_PERMISSION_DATABASE=permission-db
      - MONGODB_SESSION_TRACKING_USER=session-tracking
      - MONGODB_SESSION_TRACKING_PASSWORD=session-tracking
      - MONGODB_SESSION_TRACKING_DATABASE=session-tracking-db

volumes:
  mongovolume:
    name: capacity-planning-mongovolume
  pgdata:
    name: capacity-planning-pgdata

networks:
  capacity-planning:
    name: capacity-planning
