dbos-secrets:
  pullers:
    - name: dbgene-demos-registry.decisionbrain.cloud-secret
      dockerconfigjson: ewoJImF1dGhzIjogewoJCSJkYmdlbmUtZGVtb3MtcmVnaXN0cnkuZGVjaXNpb25icmFpbi5jbG91ZCI6IHsKCQkJImF1dGgiOiAiWkdKblpXNWxMV1JsYlc5ek9tbGxVMmhoTVZCdiIKCQl9Cgl9LAoJIkh0dHBIZWFkZXJzIjogewoJCSJVc2VyLUFnZW50IjogIkRvY2tlci1DbGllbnQvMTkuMDMuNiAobGludXgpIgoJfQp9Cg==


global:
  target: okd # k8s or okd

  # data used to build the domain for all URLs
  # service URLs are built by default using <serviceConfig.name>.<routeHostBase>
  domain: rio-aps-poc-14d91fbc484122dac6eebae3af64bb35-0000.au-syd.containers.appdomain.cloud
  routeHostBase: "{{ .Release.Namespace }}.{{ .Values.global.domain }}"

  protocol: https # http or https
  routeKind: Ingress # <Ingress|IngressRoute> Only with target = k8s
  localCluster: false
  databaseSettings:
    - database
    - username
    - password

rabbitmq:
  config:
    imageRegistry: registry.hub.docker.com/library
    appLabel: infra
    plugins: "[rabbitmq_management,rabbitmq_web_stomp]."

mongo:
  config:
    imageRegistry: registry.hub.docker.com/library
    appLabel: infra
  volumeClaimName: mongo-data
  env:
    - name: MONGO_INITDB_ROOT_USERNAME
      valueFrom:
        secretKeyRef:
          name: mongo
          key: mongo-initdb-root-username
    - name: MONGO_INITDB_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mongo
          key: mongo-initdb-root-password
  databases:
    - dbos

postgres:
  config:
    imageRegistry: centos
    appLabel: infra
  volumeClaimName: postgres-data
  env:
    - name: POSTGRESQL_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres
          key: postgres-admin-password
  databases:
    - keycloak
    - dataServer

keycloak:
  redirectHost: '{{ printf "%s-%s.%s" "dbos-console" .Release.Namespace .Values.global.domain }}'
  realmId: decisionbrain
  clientId: optimserver
  # Choose the ConfigMap where the realm file is
  #realmConfigMapName: <name of the ConfigMap>
  # Choose the name of the file of the ConfigMap that contains the realm file
  #only used if keycloak.realm is empty
  defaultRealmFileName: 'realm-default.json'
  realmFileName: 'realm.json'
  realm: "true"
  # allow to override realm with external content
  realmdata: [{
          "keycloakVersion": "8.0.1",
          "id": "gene",
          "realm": "gene",
          "displayName": "IBM DOC powered by DecisionBrain",
          "displayNameHtml": "<div class=\"kc-logo-text\"><span>IBM DOC powered by DecisionBrain</span></div>",
          "loginTheme": "gene",
          "enabled": true,
          "roles": {
            "client": {
              "gene-web": [
                {
                  "name": "SYSTEM",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "client-gene-web-id",
                  "attributes": {}
                },
                {
                  "name": "PERMISSIONS_ADMIN",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "client-gene-web-id",
                  "attributes": {}
                },
                {
                  "name": "GENE_USER",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "client-gene-web-id",
                  "attributes": {}
                }
              ]
            }
          },
          "groups": [
            {
              "name": "GENE_SERVICES",
              "path": "/GENE_SERVICES",
              "attributes": {},
              "realmRoles": [],
              "clientRoles": {
                "gene-web": [
                    "SYSTEM"
                ],
                "realm-management": [
                    "view-clients",
                    "view-users"
                ]
              },
              "subGroups": []
            },
            {
              "name": "GENE_USERS",
              "path": "/GENE_USERS",
              "attributes": {},
              "realmRoles": [],
              "clientRoles": {
                "account": [
                    "manage-account",
                    "view-profile"
                ],
                "gene-web": [
                    "GENE_USER"
                ]
              },
              "subGroups": []
            },
            {
              "name": "GENE_ADMINS",
              "path": "/GENE_ADMINS",
              "attributes": {},
              "realmRoles": [],
              "clientRoles": {
                "gene-web": [
                    "PERMISSIONS_ADMIN"
                ]
              },
              "subGroups": []
            }
          ],
          "clients": [
            {
              "id": "client-gene-web-id",
              "clientId": "gene-web",
              "rootUrl": "https://{{ tpl .Values.keycloak.redirectHost . }}",
              "adminUrl": "https://{{ tpl .Values.keycloak.redirectHost . }}",
              "clientAuthenticatorType": "client-secret",
              "secret": "**********",
              "redirectUris": [
                  "https://{{ tpl .Values.keycloak.redirectHost . }}/*"
              ],
              "webOrigins": [
                  "+"
              ],
              "directAccessGrantsEnabled": true,
              "publicClient": true
            }
          ],
          "users": [
            {
              "username": "gene_admin",
              "enabled": true,
              "credentials": [
                {
                  "type": "password",
                  "hashedSaltedValue": "s7xdL+uUa77e1XBVQ9o8Jk1Qd8Fcv9hFTuumqbX4h+Aq6tRBgxTpCssTR+aK/xJ7Ji7Jpr84GxwROjukKaiDcQ==",
                  "salt": "8s5bNTEoRUq0siS7Maui+g==",
                  "hashIterations": 100000,
                  "algorithm": "pbkdf2-sha256"
                }
              ],
              "clientRoles": {
              },
              "groups": [
                  "GENE_ADMINS",
                  "GENE_USERS"
              ]
            },
            {
              "username": "user1",
              "enabled": true,
              "credentials": [
                {
                  "type": "password",
                  "hashedSaltedValue": "s7xdL+uUa77e1XBVQ9o8Jk1Qd8Fcv9hFTuumqbX4h+Aq6tRBgxTpCssTR+aK/xJ7Ji7Jpr84GxwROjukKaiDcQ==",
                  "salt": "8s5bNTEoRUq0siS7Maui+g==",
                  "hashIterations": 100000,
                  "algorithm": "pbkdf2-sha256"
                }
              ],
              "clientRoles": {
              },
              "groups": [
                  "GENE_USERS"
              ]
            },
            {
              "username": "user2",
              "enabled": true,
              "credentials": [
                {
                  "type": "password",
                  "hashedSaltedValue": "s7xdL+uUa77e1XBVQ9o8Jk1Qd8Fcv9hFTuumqbX4h+Aq6tRBgxTpCssTR+aK/xJ7Ji7Jpr84GxwROjukKaiDcQ==",
                  "salt": "8s5bNTEoRUq0siS7Maui+g==",
                  "hashIterations": 100000,
                  "algorithm": "pbkdf2-sha256"
                }
              ],
              "clientRoles": {
              },
              "groups": [
                  "GENE_USERS"
              ]
            },
            {
              "username": "execution",
              "enabled": true,
              "credentials": [
                {
                  "type": "password",
                  "hashedSaltedValue": "/liflNf4sLUp47BS5fDH694C1xVGiSNlHk3ETzOYBDYk4ikURkJnVISS4fcq0wiJ5tri6mkhsSA6bcemZqDTeQ==",
                  "salt": "DeJ32dx3GQo4VtvSNd45AA==",
                  "hashIterations": 100000,
                  "algorithm": "pbkdf2-sha256"
                }
              ],
              "clientRoles": {
              },
              "groups": [
                  "GENE_SERVICES"
              ]
            },
            {
              "username": "backend",
              "enabled": true,
              "credentials": [
                {
                  "type": "password",
                  "hashedSaltedValue": "83zoilW8pIFn1HdzOkn00MuV+ujqSxwiVwHBdI87zhG0KQidMNmtQFI8X+5uhyBWXAVlWmU+S9kDxGc2tHpsfQ==",
                  "salt": "6aOEPJiGMdV5ZBVxwJYcog==",
                  "hashIterations": 100000,
                  "algorithm": "pbkdf2-sha256"
                }
              ],
              "clientRoles": {
              },
              "groups": [
                  "GENE_SERVICES"
              ]
            },
            {
              "username": "data-service",
              "enabled": true,
              "credentials": [
                {
                  "type": "password",
                  "hashedSaltedValue": "sXmRyhZ1rEUDAvK3+Kdg88A9w/dFYkqagtCN1rt6cBi4q2djcdRYHwTMEAAJxpqnIDGV6rvbiP3MJWCDFaQufQ==",
                  "salt": "97ysMKjnZYloVUwgh/wfHQ==",
                  "hashIterations": 100000,
                  "algorithm": "pbkdf2-sha256"
                }
              ],
              "clientRoles": {
              },
              "groups": [
                  "GENE_SERVICES"
              ]
            },
            {
              "username": "scenario-service",
              "enabled": true,
              "credentials": [
                {
                  "type" : "password",
                  "secretData" : "{\"value\":\"Dztk2OhTpghx66cJXIZMRYy8AXEHjrWDHm+Pd9BmsFRPtAGBXRcZvJFK1rJ+L5JOyr1c+CmLT1buWtVvHfejSg==\",\"salt\":\"eZOfoSw/gG7CaiopuWj4pQ==\"}",
                  "credentialData" : "{\"hashIterations\":100000,\"algorithm\":\"pbkdf2-sha256\"}"
                }
              ],
              "clientRoles": {
                "realm-management": [
                    "manage-users",
                    "view-clients",
                    "view-users"
                ]
              },
              "groups": [
                  "GENE_SERVICES"
              ]
            }
          ]
        },
        {
          "keycloakVersion": "8.0.1",
          "id": "decisionbrain",
          "realm": "decisionbrain",
          "displayName": "Keycloak",
          "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
          "loginTheme": "gene",
          "enabled": true,
          "roles": {
            "realm": [
              {
                "name": "optimserver",
                "description": "optimserver access role",
                "composite": false,
                "clientRole": false,
                "containerId": "decisionbrain"
              }
            ],
            "client": {
              "optimserver": []
            }
          },
          "groups": [
            {
              "name": "decisionbrain",
              "path": "/decisionbrain",
              "attributes": {},
              "realmRoles": [
                  "uma_authorization",
                  "offline_access",
                  "admin",
                  "optimserver"
              ],
              "clientRoles": {
                "account": [
                    "manage-account",
                    "view-profile"
                ]
              },
              "subGroups": [{"name": "lab"}, {"name": "factory"}]
            },
            {
              "name": "web-console",
              "path": "/web-console",
              "attributes": {},
              "realmRoles": [
                  "optimserver"
              ],
              "clientRoles": {
                "account": [
                    "manage-account",
                    "view-profile"
                ]
              },
              "subGroups": [{"name": "test-group"}]
            }
          ],
          "clients": [
            {
              "clientId": "optimserver",
              "name": "Optimization Server",
              "rootUrl": "https://dbos-console-{{ tpl .Values.keycloak.redirectHost . }}",
              "clientAuthenticatorType": "client-secret",
              "secret": "**********",
              "redirectUris": [
                  "https://dbos-console-{{ tpl .Values.keycloak.redirectHost . }}/*"
              ],
              "webOrigins": [
                  "+"
              ],
              "directAccessGrantsEnabled": true,
              "publicClient": true,
              "protocolMappers": [
                {
                  "name": "group-mapper",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-group-membership-mapper",
                  "consentRequired": false,
                  "config": {
                    "full.path": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "groups",
                    "userinfo.token.claim": "true"
                  }
                }
              ]
            }
          ],
          "users" : [
            {
              "username": "execution",
              "enabled": true,
              "credentials": [
                {
                  "type": "password",
                  "hashedSaltedValue": "/liflNf4sLUp47BS5fDH694C1xVGiSNlHk3ETzOYBDYk4ikURkJnVISS4fcq0wiJ5tri6mkhsSA6bcemZqDTeQ==",
                  "salt": "DeJ32dx3GQo4VtvSNd45AA==",
                  "hashIterations": 100000,
                  "algorithm": "pbkdf2-sha256"
                }
              ],
              "groups": [
                  "/decisionbrain"
              ]
            },
            {
              "username" : "optimserver",
              "enabled" : true,
              "credentials" : [ {
                "type" : "password",
                "hashedSaltedValue" : "Ph9DHXD1JwATzUh2xbw4lpUYrpVXV2Quf0fz8qecxCvjLmrkU0H4wk6w6CDXZddaYYZlOc46UFxCEDU6gyh4oA==",
                "salt" : "qQ8aU6/GKkqIepyx+DO/8A==",
                "hashIterations" : 100000,
                "algorithm" : "pbkdf2-sha256"
              } ],
              "groups": [
                  "/decisionbrain"
              ],
              "clientRoles" : {
                "realm-management" : [ "optimserver" ]
              }
            },
            {
              "username" : "test.user",
              "enabled" : true,
              "credentials" : [ {
                "type" : "password",
                "hashedSaltedValue" : "Ph9DHXD1JwATzUh2xbw4lpUYrpVXV2Quf0fz8qecxCvjLmrkU0H4wk6w6CDXZddaYYZlOc46UFxCEDU6gyh4oA==",
                "salt" : "qQ8aU6/GKkqIepyx+DO/8A==",
                "hashIterations" : 100000,
                "algorithm" : "pbkdf2-sha256"
              } ],
              "groups": [
                  "/web-console/test-group"
              ]
            }
          ]
        }]
  config:
    imageRegistry: registry.hub.docker.com
    appLabel: infra
    route:
      servicePort: 8080
  env:
  - name: KEYCLOAK_USER
    value: admin
  - name: KEYCLOAK_PASSWORD
    valueFrom:
      secretKeyRef:
        name: keycloak
        key: keycloak-admin-password
  - name: DB_VENDOR
    value: postgres
  - name: DB_ADDR
    value: postgres
  - name: DB_DATABASE
    valueFrom:
      secretKeyRef:
        name: postgres
        key: postgres-keycloak-database
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        name: postgres
        key: postgres-keycloak-username
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres
        key: postgres-keycloak-password
  - name: PROXY_ADDRESS_FORWARDING
    value: 'true'
