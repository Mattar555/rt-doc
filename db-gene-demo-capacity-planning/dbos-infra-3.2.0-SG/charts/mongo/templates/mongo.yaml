{{- $config := .Values.config -}}
{{- $name := $config.name -}}
{{- $global := .Values.global -}}

{{- if .Values.enabled }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-provisioning-data
data:
  addUser.sh: |
    #!/bin/bash
    set +e
    {{- range $dbAlias := .Values.databases }}
    mongo -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --eval "db.getSiblingDB('$MONGODB_{{ $dbAlias }}_database').createUser({user: '$MONGODB_{{ $dbAlias }}_username', pwd: '$MONGODB_{{ $dbAlias }}_password', roles: [{ role: 'dbOwner', db: '$MONGODB_{{ $dbAlias }}_database' }]},{w: 'majority',wtimeout: 5000});"
    {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ $config.appLabel }}
  name: {{ $name }}
spec:
  ports:
    - name: 27017-27017-tcp
      port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    app: {{ $config.appLabel }}
    name: {{ $name }}
  sessionAffinity: None
  type: ClusterIP
---
{{- if (eq $global.localCluster true) }}
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ $config.appLabel }}
  name: {{ $name }}-local
spec:
  ports:
    - name: 27017-27017-tcp-local
      port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    app: {{ $config.appLabel }}
    name: {{ $name }}
  sessionAffinity: None
  type: LoadBalancer
{{- end }}
{{- end }}
